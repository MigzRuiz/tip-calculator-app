{"version":3,"sources":["script.js"],"names":["bill","customTip","currentTip","people","tipPerPerson","totalPerPerson","inputBill","document","querySelector","inputTip","querySelectorAll","inputPeople","outputPerson","outputTotal","resetBtn","inputCustom","peopleCaption","addEventListener","e","preventDefault","parseInt","target","value","computeTipTotal","forEach","tipEl","clearActiveBtn","dataset","type","innerText","replace","classList","add","remove","textContent","toFixed","tEl"],"mappings":"AAAA,aAcA,IAUIA,KAAMC,UAAWC,WAAYC,OAAQC,aAAcC,eAVjDC,UAAYC,SAASC,cAAc,gBACnCC,SAAWF,SAASG,iBAAiB,eACrCC,YAAcJ,SAASC,cAAc,kBACrCI,aAAeL,SAASC,cAAc,0BACtCK,YAAcN,SAASC,cAAc,yBACrCM,SAAWP,SAASC,cAAc,iBAElCO,YAAcR,SAASC,cAAc,kBACrCQ,cAAgBT,SAASC,cAAc,oBAK7CF,UAAUW,iBAAiB,UAAU,SAACC,GACpCA,EAAEC,iBACFnB,KAAOoB,SAASF,EAAEG,OAAOC,OACzBC,qBAIFd,SAASe,SAAQ,SAACC,GAChBA,EAAMR,iBAAiB,SAAS,SAACC,GAC/BA,EAAEC,iBACFO,iBAG2B,WAAvBD,EAAME,QAAQC,KAChBb,YAAYE,iBAAiB,UAAU,SAACC,GACtCA,EAAEC,iBAEFlB,UAAYmB,SAASF,EAAEG,OAAOC,OAC9BpB,WAAaD,UAAY,IAEzBsB,sBAGFrB,WAAakB,SAASF,EAAEG,OAAOQ,UAAUC,QAAQ,IAAK,KAAO,IAC7Df,YAAYO,MAAQ,GACpBG,EAAMM,UAAUC,IAAI,iBACpBT,yBAMNZ,YAAYM,iBAAiB,UAAU,SAACC,GACtCA,EAAEC,iBAIa,KAHfhB,OAASiB,SAASF,EAAEG,OAAOC,SAIzBN,cAAce,UAAUE,OAAO,UAC/BtB,YAAYoB,UAAUC,IAAI,gBAE1BhB,cAAce,UAAUC,IAAI,UAC5BrB,YAAYoB,UAAUE,OAAO,eAG/BV,qBAGF,IAAMA,gBAAkB,WAEtBnB,aAAgBJ,KAAOE,WAAcC,OACrCS,aAAasB,YAAc9B,aAAa+B,QAAQ,GAGhD9B,eAAiBL,KAAOG,OAASC,aACjCS,YAAYqB,YAAc,IAAM7B,eAAe8B,QAAQ,IAInDT,eAAiB,WACrBjB,SAASe,SAAQ,SAACY,GAChBA,EAAIL,UAAUE,OAAO,qBAKzBnB,SAASG,iBAAiB,SAAS,SAACC,GAClClB,KAAO,EACPE,WAAa,EACbC,OAAS,EACTC,aAAe,EACfC,eAAiB,EAEjBC,UAAUgB,MAAQ,GAClBX,YAAYW,MAAQ,GACpBP,YAAYO,MAAQ,GACpBV,aAAasB,YAAc,OAC3BrB,YAAYqB,YAAc,OAE1BR","file":"script.js","sourcesContent":["/*\n    1. Need to be able to enter bill\n    2. Need to select a tip\n        3. When tip is selected, tip color will change\n    4. Need to select people\n    5. Compute tip each person (bill * tip percent / people)\n    6. Compute total amount per person (bill/peole + tip per person )\n    7. Reset everything\n\n    8. Custom Tip logic\n    9. Fix number of people validation\n*/\n\n// Variables\nconst inputBill = document.querySelector(\".input__bill\");\nconst inputTip = document.querySelectorAll(\".input__tip\");\nconst inputPeople = document.querySelector(\".input__people\");\nconst outputPerson = document.querySelector(\".output__amount-person\");\nconst outputTotal = document.querySelector(\".output__amount-total\");\nconst resetBtn = document.querySelector(\".input__reset\");\n\nconst inputCustom = document.querySelector(\".input__custom\");\nconst peopleCaption = document.querySelector(\".people__caption\");\n\nlet bill, customTip, currentTip, people, tipPerPerson, totalPerPerson;\n\n// 1. Need to be able to enter bill\ninputBill.addEventListener(\"change\", (e) => {\n  e.preventDefault();\n  bill = parseInt(e.target.value);\n  computeTipTotal();\n});\n\n// 2. Need to select a tip\ninputTip.forEach((tipEl) => {\n  tipEl.addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    clearActiveBtn();\n\n    // 8. Custom Tip logic\n    if (tipEl.dataset.type === \"custom\") {\n      inputCustom.addEventListener(\"change\", (e) => {\n        e.preventDefault();\n\n        customTip = parseInt(e.target.value);\n        currentTip = customTip / 100;\n\n        computeTipTotal();\n      });\n    } else {\n      currentTip = parseInt(e.target.innerText.replace(\"%\", \"\")) / 100;\n      inputCustom.value = \"\";\n      tipEl.classList.add(\"input__active\");\n      computeTipTotal();\n    }\n  });\n});\n\n// 4. Need to select people\ninputPeople.addEventListener(\"change\", (e) => {\n  e.preventDefault();\n  people = parseInt(e.target.value);\n\n  // 9. Fix number of people validation\n  if (people === 0) {\n    peopleCaption.classList.remove(\"hidden\");\n    inputPeople.classList.add(\"outlineRed\");\n  } else {\n    peopleCaption.classList.add(\"hidden\");\n    inputPeople.classList.remove(\"outlineRed\");\n  }\n\n  computeTipTotal();\n});\n\nconst computeTipTotal = () => {\n  // 5. Compute tip each person (bill * tip percent / people)\n  tipPerPerson = (bill * currentTip) / people;\n  outputPerson.textContent = tipPerPerson.toFixed(2);\n\n  // 6. Compute total amount per person (bill/peole + tip per person )\n  totalPerPerson = bill / people + tipPerPerson;\n  outputTotal.textContent = \"$\" + totalPerPerson.toFixed(2);\n};\n\n// 3. When tip is selected, tip color will change\nconst clearActiveBtn = () => {\n  inputTip.forEach((tEl) => {\n    tEl.classList.remove(\"input__active\");\n  });\n};\n\n// 7. Reset everything\nresetBtn.addEventListener(\"click\", (e) => {\n  bill = 0;\n  currentTip = 0;\n  people = 0;\n  tipPerPerson = 0;\n  totalPerPerson = 0;\n\n  inputBill.value = \"\";\n  inputPeople.value = \"\";\n  inputCustom.value = \"\";\n  outputPerson.textContent = \"$0.0\";\n  outputTotal.textContent = \"$0.0\";\n\n  clearActiveBtn();\n});\n"]}